name: CI

on: [push, pull_request]
env:
  SM_PATH: sourcemod
  SP_COMP: sourcemod/addons/sourcemod/scripting/spcomp64
  STEAMWORKS_VERS: SteamWorks-git132
  INCLUDE: addons/sourcemod/scripting/include
  SCRIPTING: addons/sourcemod/scripting
  EXTENSIONS: addons/sourcemod/extensions
  PLUGINS: addons/sourcemod/plugins

jobs:
  build:
    name: Building on SM ${{ matrix.sm_version }}
    runs-on: [ubuntu-18.04]
    strategy:
      matrix:
        sm_version: ["1.10", "1.11"]

    steps:
    - name: Prepare env
      shell: bash
      run: |
        echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Checkout repository
      uses: actions/checkout@master

    - name: Download SourceMod ${{ matrix.sm_version }}
      run: |
        mkdir ${{ env.SM_PATH }}
        cd ${{ env.SM_PATH }}
        wget --input-file=http://sourcemod.net/smdrop/${{ matrix.sm_version }}/sourcemod-latest-linux
        tar -xzf $(cat sourcemod-latest-linux)

    - name: Download & install Morecolors
      run: wget "http://www.doctormckay.com/download/scripting/include/morecolors.inc" -O ${{ env.INCLUDE }}/morecolors.inc
    - name: Download & install VoiceAnnounceEX
      run: wget "https://raw.githubusercontent.com/Franc1sco/VoiceAnnounceEX/master/scripting/include/voiceannounce_ex.inc" -O ${{ env.INCLUDE }}/voiceannounce_ex.inc
    - name: Download & install VIP Core include
      run: wget "https://raw.githubusercontent.com/R1KO/VIP-Core/master/addons/sourcemod/scripting/include/vip_core.inc" -O ${{ env.INCLUDE }}/vip_core.inc
    - name: Kailo97 smart doors
      run: wget "https://raw.githubusercontent.com/Kailo97/smartjaildoors/master/addons/sourcemod/scripting/include/smartjaildoors.inc" -O ${{ env.INCLUDE }}/smartjaildoors.inc
    - name: Download & install ${{ env.STEAMWORKS_VERS }}
      run: |
        wget http://users.alliedmods.net/~kyles/builds/SteamWorks/${{ env.STEAMWORKS_VERS }}-linux.tar.gz
        wget http://users.alliedmods.net/~kyles/builds/SteamWorks/${{ env.STEAMWORKS_VERS }}-windows.zip
        tar -xzf ${{ env.STEAMWORKS_VERS }}-linux.tar.gz ${{ env.EXTENSIONS }}/SteamWorks.ext.so ${{ env.INCLUDE }}/SteamWorks.inc
        unzip -j ${{ env.STEAMWORKS_VERS }}-windows.zip ${{ env.EXTENSIONS }}/SteamWorks.ext.dll -d ${{ env.EXTENSIONS }}
        wget "https://raw.githubusercontent.com/ExperimentFailed/SteamWorks/master/Pawn/includes/SteamWorks.inc" -O ${{ env.INCLUDE }}/SteamWorks.inc
    - name: Add multicolors from github repository
      run: |
        mkdir ${{ env.INCLUDE }}/multicolors
        wget "https://raw.githubusercontent.com/Bara/Multi-Colors/master/addons/sourcemod/scripting/include/multicolors/colors.inc" -O ${{ env.INCLUDE }}/multicolors/colors.inc
        wget "https://raw.githubusercontent.com/Bara/Multi-Colors/master/addons/sourcemod/scripting/include/multicolors/morecolors.inc" -O ${{ env.INCLUDE }}/multicolors/morecolors.inc
        wget "https://raw.githubusercontent.com/Bara/Multi-Colors/master/addons/sourcemod/scripting/include/multicolors.inc" -O ${{ env.INCLUDE }}/multicolors.inc
    - name: Shop support
      run: |
        mkdir ${{ env.INCLUDE }}/shop
        wget "https://raw.githubusercontent.com/FD-Forks/Shop-Core/master/addons/sourcemod/scripting/include/shop.inc" -O ${{ env.INCLUDE }}/shop.inc
        wget "https://raw.githubusercontent.com/FD-Forks/Shop-Core/master/addons/sourcemod/scripting/include/shop/admin.inc" -O ${{ env.INCLUDE }}/shop/admin.inc
        wget "https://raw.githubusercontent.com/FD-Forks/Shop-Core/master/addons/sourcemod/scripting/include/shop/db.inc" -O ${{ env.INCLUDE }}/shop/db.inc
        wget "https://raw.githubusercontent.com/FD-Forks/Shop-Core/master/addons/sourcemod/scripting/include/shop/functions.inc" -O ${{ env.INCLUDE }}/shop/functions.inc
        wget "https://raw.githubusercontent.com/FD-Forks/Shop-Core/master/addons/sourcemod/scripting/include/shop/items.inc" -O ${{ env.INCLUDE }}/shop/items.inc
        wget "https://raw.githubusercontent.com/FD-Forks/Shop-Core/master/addons/sourcemod/scripting/include/shop/players.inc" -O ${{ env.INCLUDE }}/shop/players.inc
        wget "https://raw.githubusercontent.com/FD-Forks/Shop-Core/master/addons/sourcemod/scripting/include/shop/register.inc" -O ${{ env.INCLUDE }}/shop/register.inc
        wget "https://raw.githubusercontent.com/FD-Forks/Shop-Core/master/addons/sourcemod/scripting/include/shop/methodmaps.inc" -O ${{ env.INCLUDE }}/shop/methodmaps.inc
    
    - name: Build plugins on SM ${{ matrix.sm_version }}
      run: |
        chmod +x ${{ env.SP_COMP }}
        mkdir ${{ env.PLUGINS }}
        bash ci/test.sh
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: jwp-${{ matrix.sm_version }}-${{ env.GITHUB_SHA_SHORT }}
        path: |
          addons
          cfg
          materials
          sound
          LICENSE
        retention-days: 2

  release:
    name: Release
    if: github.ref_type == 'tag'
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: true
          prerelease: false
      
  upload:
    name: Upload artifacts
    if: github.ref_type == 'tag'
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sm_version: ["1.10", "1.11"]
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      
      - name: Prepare env
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "artifact=jwp-${{ github.ref_name }}-${{ matrix.sm_version }}-${GITHUB_SHA::7}.zip" >> $GITHUB_ENV
  
      - name: Arhive Assets
        run: |
          zip -r ${{env.artifact-1_10}} jwp-${{ matrix.sm_version }}-${{ env.GITHUB_SHA_SHORT }}
      
      - name: Upload Asset ${{ matrix.sm_version }}
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.artifact }}
          asset_name: ${{ env.artifact }}
          asset_content_type: application/zip